# Generated by Django 2.2.7 on 2020-01-09 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mvp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, help_text='le nom du client.', max_length=150, verbose_name='le nom du client.')),
                ('email', models.EmailField(default=None, help_text="l'email du client", max_length=150, verbose_name='email du client')),
                ('created_at', models.DateField(default=mvp.models.GetDate, editable=False, verbose_name='date de création du client.')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'client',
                'ordering': ['company__id', 'commercial__id', 'account_manager__id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Commercial',
                'verbose_name_plural': 'Commercials',
                'ordering': ['company__id', 'user', 'user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Préciser le nom de l'entreprise.", max_length=150, verbose_name="Nom de l'entreprise.")),
                ('siret', models.CharField(default=None, help_text="Numéro SIRET de l'entreprise.", max_length=14, verbose_name="Numéro SIRET de l'entreprise.")),
                ('invoice_nb', models.PositiveIntegerField(default=1, help_text="Numéro de factures de l'entreprise.", verbose_name="Numéro de factures de l'entreprise.")),
                ('junior_day', models.PositiveIntegerField(default=0, help_text='Précisez le prix du jour homme junior de cette entreprise.', verbose_name='Prix du Jour homme junior de cette entreprise.')),
                ('senior_day', models.PositiveIntegerField(default=0, help_text='Précisez le prix du jour homme senior de cette entreprise.', verbose_name='Prix du Jour homme senior de cette entreprise.')),
                ('facturation_delay', models.PositiveSmallIntegerField(choices=[(45, '45 Jours'), (90, '90 Jours'), (30, '30 Jours'), (75, '75 Jours'), (60, '60 Jours'), (15, '15 Jours')], default=45, help_text='Précisez le délai à partir duquel un client est considéré en retard de paiement.', verbose_name='Délai de facturation.')),
                ('ceo', models.OneToOneField(help_text="Préciser le CEO de l'entreprise.", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="CEO de l'entreprise.")),
            ],
            options={
                'verbose_name': 'entreprise',
                'verbose_name_plural': 'entreprises',
                'ordering': ['ceo__id'],
            },
        ),
        migrations.CreateModel(
            name='Conseil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Description du conseil', max_length=150, verbose_name='Description du conseil.')),
                ('price', models.PositiveIntegerField(default=0, help_text='Montant total (€)', verbose_name='Montant total.')),
                ('payed', models.BooleanField(default=False, help_text='Précisez si le conseil est déjà payé.', verbose_name='Si le conseil est payé.')),
                ('start_date', models.DateField(default=mvp.models.GetDate, help_text='Date de début du conseil.', verbose_name='Date de début.')),
                ('duration', models.PositiveIntegerField(default=1, help_text='Précisez la durée totale du conseil (en mois).', verbose_name='Durée totale (en mois).')),
                ('end_date', models.DateField(default=mvp.models.GetDate, help_text='Date de fin du conseil.', verbose_name='Date de fin du conseil.')),
            ],
            options={
                'verbose_name': 'conseil',
                'verbose_name_plural': 'conseils',
                'ordering': ['contract__id', 'payed', 'price', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='description du contrat', max_length=100, verbose_name='description du contrat')),
                ('start_date', models.DateField(default=mvp.models.GetDate, help_text='date de début du contrat', verbose_name='date de début du contrat')),
                ('duration', models.PositiveIntegerField(default=1, help_text='précisez la durée totale du contrat (en mois).', verbose_name='durée totale du contrat (en mois).')),
                ('end_date', models.DateField(default=mvp.models.GetDate, help_text='date de fin du contrat.', verbose_name='date de fin du contrat')),
                ('facturation', models.PositiveSmallIntegerField(default=1, help_text='Fréquence de la facturation.', verbose_name='Fréquance de la facturation.')),
                ('price', models.PositiveIntegerField(default=0, help_text='montant total du contrat (EN EUROS)', verbose_name='montant total du contrat.')),
                ('payed', models.BooleanField(default=False, help_text='précisez si le contrat est payé en intégralité.', verbose_name='si le contrat est payé en intégralité.')),
                ('validated', models.BooleanField(default=False, help_text='précisez si le contract est validé..', verbose_name='si le contract est validé.')),
                ('client', models.ForeignKey(default=None, help_text='client cible du contrat', on_delete=django.db.models.deletion.CASCADE, to='mvp.Client', verbose_name='client cible du contrat')),
                ('commercial', models.ForeignKey(default=None, help_text="commercial à l'origine du contrat", on_delete=django.db.models.deletion.CASCADE, to='mvp.Commercial', verbose_name="commercial à l'origine du contrat")),
                ('company', models.ForeignKey(default=None, help_text='entreprise vendeuse du contrat.', on_delete=django.db.models.deletion.CASCADE, to='mvp.Company', verbose_name='entreprise vendeuse du contrat.')),
            ],
            options={
                'verbose_name': 'conseil',
                'verbose_name_plural': 'conseils',
                'ordering': ['company__id', 'commercial__id', 'price', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Description du service', max_length=150, verbose_name='Description du service')),
                ('price', models.PositiveIntegerField(default=0, help_text='Pricing du service (€)', verbose_name='Pricing du service')),
                ('estimated_date', models.DateField(default=django.utils.timezone.now, help_text='Sélectionnez une date prévisionelle.', verbose_name='Date prévisionelle')),
                ('actual_date', models.DateField(default=None, help_text='Fin du service', null=True, verbose_name='Fin du service')),
                ('payed', models.BooleanField(default=False, help_text='Précisez si le service est déjà payé.', verbose_name='Si le service est payé.')),
                ('junior_day', models.DecimalField(decimal_places=2, default=0, help_text='Précisez le Jour homme junior nécessaire pour ce service.', max_digits=5, verbose_name='Jour-hommes junior nécessaire pour ce service.')),
                ('senior_day', models.DecimalField(decimal_places=2, default=0, help_text='Précisez le Jour homme senior nécessaire pour ce service.', max_digits=5, verbose_name='Jour-hommes senior nécessaire pour ce service.')),
                ('done', models.SmallIntegerField(choices=[(2, 'Ne sera jamais effectué'), (1, 'Effectué'), (0, 'Pas encore effectué')], default=0, help_text='Précisez si le service est effectué.', verbose_name='Si le service est effectué.')),
                ('conseil', models.ForeignKey(default=None, help_text='Conseil relatif au service', on_delete=django.db.models.deletion.CASCADE, to='mvp.Conseil', verbose_name='Conseil relatif au service')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'ordering': ['payed', 'estimated_date', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.PositiveSmallIntegerField(choices=[(2, 'Account Manager'), (3, 'Factu Manager'), (1, 'Manager General')], default=3, help_text='préciser le rôle du manager.', verbose_name='rôle du manager.')),
                ('company', models.ForeignKey(default=None, help_text="préciser l'entreprise de ce manager.", on_delete=django.db.models.deletion.CASCADE, to='mvp.Company', verbose_name='entreprise du manager.')),
                ('user', models.OneToOneField(help_text="préciser l'utilisateur lié à ce manager.", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="l'utilisateur lié à ce manager")),
            ],
            options={
                'verbose_name': 'manager',
                'verbose_name_plural': 'managers',
                'ordering': ['company__id', 'role', 'user', 'user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Description de la licence.', max_length=150, verbose_name='Description de la licence.')),
                ('price', models.PositiveIntegerField(default=0, help_text='Montant (€).', verbose_name='Montant')),
                ('start_date', models.DateField(default=mvp.models.GetDate, help_text='Date de début.', verbose_name='Date de début.')),
                ('duration', models.PositiveIntegerField(default=1, help_text='Précisez la durée totale (en mois).', verbose_name='Durée totale (en mois).')),
                ('end_date', models.DateField(default=mvp.models.GetDate, help_text='Date de fin.', verbose_name='Date de fin.')),
                ('payed', models.BooleanField(default=False, help_text='Précisez si la licence est déjà payée.', verbose_name='Si la licence est payée.')),
                ('contract', models.ForeignKey(default=None, help_text='Préciser le contrat dans lequel est inclus cette licence.', on_delete=django.db.models.deletion.CASCADE, to='mvp.Contract', verbose_name='Le contrat dans lequel est inclus cette licence.')),
            ],
            options={
                'verbose_name': 'license',
                'verbose_name_plural': 'licenses',
                'ordering': ['contract__id', 'price', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Description de la facture', max_length=300, verbose_name="Invoice's description")),
                ('price', models.PositiveIntegerField(default=0, help_text='Montant total de la facture (EN EUROS).', verbose_name='Montant total de la facture.')),
                ('date', models.DateField(default=mvp.models.GetDate, help_text='Date de la facture.', verbose_name='Date de la facture')),
                ('pdf', models.FileField(default=None, help_text='PDF de la facture.', null=True, upload_to=mvp.models.getInvoiceStorage, verbose_name='PDF de la facture.')),
                ('facturated_date', models.DateField(default=None, help_text='Précisez la date de facturation', null=True, verbose_name='Date de facturation')),
                ('payed', models.BooleanField(default=False, help_text='Précisez si la facture est payée', verbose_name='Si la facture est payée.')),
                ('company', models.ForeignKey(help_text="Préciser l'entreprise de cette facture.", on_delete=django.db.models.deletion.CASCADE, to='mvp.Company', verbose_name="L'entreprise de cette facture.")),
                ('conseils', models.ManyToManyField(default=None, help_text='Préciser le ou les conseil(s) à facturer.', to='mvp.Conseil', verbose_name='Le ou les conseil(s) relatif(s) à cette facture.')),
                ('contract', models.ForeignKey(default=None, help_text='Préciser le contrat relatif à cette facture.', on_delete=django.db.models.deletion.CASCADE, to='mvp.Contract', verbose_name='Le contrat relatif à cette facture.')),
                ('licenses', models.ManyToManyField(default=None, help_text='Préciser le ou les licenses(s) à facturer.', to='mvp.License', verbose_name='Le ou les licenses(s) relatif(s) à cette facture.')),
            ],
            options={
                'verbose_name': 'facture',
                'verbose_name_plural': 'factures',
                'ordering': ['company__id', 'payed', 'price', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default=None, help_text="L'email du destinataire.", max_length=150, verbose_name='Email du destinataire.')),
                ('role', models.PositiveSmallIntegerField(choices=[(4, 'Commercial'), (1, 'Manager'), (3, 'Responsable Facturation'), (2, 'Responsable Clientèle')], default=4, help_text='Préciser le rôle de la personne', verbose_name='Rôle de la personne')),
                ('company', models.ForeignKey(help_text="Préciser l'entreprise de cette invitation.", on_delete=django.db.models.deletion.CASCADE, to='mvp.Company', verbose_name="L'entreprise de cette invitation.")),
            ],
            options={
                'verbose_name': 'invitation',
                'verbose_name_plural': 'invitations',
                'ordering': ['company__id', 'role'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='factu_manager',
            field=models.ForeignKey(default=None, help_text='préciserle responsable de la facturation de ce contrat.', on_delete=django.db.models.deletion.CASCADE, related_name='factu_manager', to='mvp.Manager', verbose_name='le responsable de la facturation de ce contrat.'),
        ),
        migrations.AddField(
            model_name='conseil',
            name='contract',
            field=models.ForeignKey(default=None, help_text='Préciser le contrat dans lequel est inclus ce conseil.', on_delete=django.db.models.deletion.CASCADE, to='mvp.Contract', verbose_name='Le contrat dans lequel est inclus ce conseil.'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='company',
            field=models.ForeignKey(default=None, help_text="préciser l'entreprise de ce commercial.", on_delete=django.db.models.deletion.CASCADE, to='mvp.Company', verbose_name="l'entreprise de ce commercial."),
        ),
        migrations.AddField(
            model_name='commercial',
            name='user',
            field=models.OneToOneField(default=None, help_text="préciser l'utilisateur lié à ce commercial.", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="l'utilisateur lié à ce commercial."),
        ),
        migrations.AddField(
            model_name='client',
            name='account_manager',
            field=models.ForeignKey(default=None, help_text='préciserle responsable clientièle de ce client.', on_delete=django.db.models.deletion.CASCADE, to='mvp.Manager', verbose_name='le responsable clientièle de ce client.'),
        ),
        migrations.AddField(
            model_name='client',
            name='commercial',
            field=models.ForeignKey(default=None, help_text='préciser le commercial relatif à ce client.', on_delete=django.db.models.deletion.CASCADE, to='mvp.Commercial', verbose_name='le commercial ayant ramené le client.'),
        ),
        migrations.AddField(
            model_name='client',
            name='company',
            field=models.ForeignKey(default=None, help_text="préciser l'entreprise du client.", on_delete=django.db.models.deletion.CASCADE, to='mvp.Company', verbose_name="l'entreprise du client."),
        ),
    ]
